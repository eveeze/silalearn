// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @unique @default(uuid())
  fullName        String
  hashedPassword  String
  email           String    @unique
  createdAt       DateTime  @default(now())
  quizResult      QuizResult[]
}

model Admin {
  id              String        @id @unique @default(uuid())
  fullName        String
  image           String?       @unique
  hashedPassword  String
  email           String        @unique
  createdAt       DateTime      @default(now())
  courses         Course[]
}

model Course {
  id          Int      @id @unique @default(autoincrement())
  slug        String   @unique
  title       String   @unique
  description String?  @db.VarChar(3000)
  price       Int?
  createdAt   DateTime @default(now())
  admin       Admin    @relation(fields: [adminId], references: [id])
  adminId     String
  quizzes Quiz[]
}

model Quiz {
  id          Int      @id @unique @default(autoincrement())
  title       String   @unique
  description String?
  createdAt   DateTime @default(now())
  questions   Question[]
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  quizResults QuizResult[]
}
model QuizResult {
  id         Int      @id @unique @default(autoincrement())
  score      Float    // Menyimpan nilai siswa
  duration   Int      // Menyimpan waktu yang diperlukan oleh siswa untuk menyelesaikan kuis (dalam detik)
  startedAt  DateTime // Waktu mulai mengerjakan kuis
  user       User     @relation(fields: [userId], references: [id]) // Siswa yang mengerjakan kuis
  userId     String
  quiz       Quiz     @relation(fields: [quizId], references: [id]) // Kuis yang sedang dikerjakan
  quizId     Int
}

model Question {
  id         Int      @id @unique @default(autoincrement())
  content    String
  options    Json
  answer     String
  quiz       Quiz     @relation(fields: [quizId], references: [id])
  quizId     Int
}
